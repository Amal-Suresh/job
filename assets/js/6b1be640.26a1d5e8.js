"use strict";(self.webpackChunkjob=self.webpackChunkjob||[]).push([[108],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(t),h=a,d=m["".concat(s,".").concat(h)]||m[h]||c[h]||i;return t?r.createElement(d,o(o({ref:n},p),{},{components:t})):r.createElement(d,o({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=h;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[m]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},430:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=t(7462),a=(t(7294),t(3905));const i={tags:["Easy","Backtracking","Bit Manipulation"]},o="Binary Watch",l={unversionedId:"algorithms/easy/binary-watch",id:"algorithms/easy/binary-watch",title:"Binary Watch",description:"Problem",source:"@site/interview/algorithms/easy/binary-watch.md",sourceDirName:"algorithms/easy",slug:"/algorithms/easy/binary-watch",permalink:"/algorithms/easy/binary-watch",draft:!1,editUrl:"https://github.com/izemil/job/edit/master/interview/algorithms/easy/binary-watch.md",tags:[{label:"Easy",permalink:"/tags/easy"},{label:"Backtracking",permalink:"/tags/backtracking"},{label:"Bit Manipulation",permalink:"/tags/bit-manipulation"}],version:"current",frontMatter:{tags:["Easy","Backtracking","Bit Manipulation"]},sidebar:"tutorialSidebar",previous:{title:"Binary Tree Level Order Traversal II",permalink:"/algorithms/easy/binary-tree-level-order-traversal-ii"},next:{title:"Climbing Stairs",permalink:"/algorithms/easy/climbing-stairs"}},s={},u=[{value:"Problem",id:"problem",level:2}],p={toc:u};function m(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"binary-watch"},"Binary Watch"),(0,a.kt)("h2",{id:"problem"},"Problem"),(0,a.kt)("p",null,"A binary watch has 4 LEDs on the top which represent the ",(0,a.kt)("strong",{parentName:"p"},"hours")," (",(0,a.kt)("strong",{parentName:"p"},"0-11"),"), and the 6 LEDs on the bottom represent the ",(0,a.kt)("strong",{parentName:"p"},"minutes")," (",(0,a.kt)("strong",{parentName:"p"},"0-59"),").\nEach LED represents a zero or one, with the least significant bit on the right."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://upload.wikimedia.org/wikipedia/commons/8/8b/Binary_clock_samui_moon.jpg",alt:null})),(0,a.kt)("p",null,'For example, the above binary watch reads "3:25".'),(0,a.kt)("p",null,"Given a non-negative integer ",(0,a.kt)("em",{parentName:"p"},"n")," which represents the number of LEDs that are currently on, return all possible times the watch could represent."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'Input: n = 1Return: ["1:00", "2:00", "4:00", "8:00", "0:01", "0:02", "0:04", "0:08", "0:16", "0:32"]\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The order of output does not matter."),(0,a.kt)("li",{parentName:"ul"},'The hour must not contain a leading zero, for example "01:00" is not valid, it should be "1:00".'),(0,a.kt)("li",{parentName:"ul"},'The minute must be consist of two digits and may contain a leading zero, for example "10:2" is not valid, it should be "10:02".')),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Solution 1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"/**\n * @param {number} num\n * @return {string[]}\n */\nvar readBinaryWatch = function (num) {\n    var res = [];\n    helper(num, 0, 0, res, 0);\n    return res;\n};\n\nvar helper = function (num, hours, minute, res, index) {\n    if (num < 0 || index > 10 || hours > 11 || minute > 59) {\n        return;\n    } else if (num === 0) {\n        res.push(hours + ':' + (minute < 10 ? '0' + minute : minute));\n    } else if (index < 4) {\n        helper(num - 1, hours + Math.pow(2, index), minute, res, index + 1);\n        helper(num, hours, minute, res, index + 1);\n    } else if (index >= 4) {\n        helper(num - 1, hours, minute + Math.pow(2, index - 4), res, index + 1);\n        helper(num, hours, minute, res, index + 1);\n    }\n};\n"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Solution 2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"/**\n * @param {number} num\n * @return {string[]}\n */\nvar readBinaryWatch = function (num) {\n    var res = [];\n    for (var i = 0; i < 12; i++) {\n        for (var j = 0; j < 60; j++) {\n            if (numberOfDigit(i) + numberOfDigit(j) === num) {\n                res.push(i + ':' + (j < 10 ? '0' + j : j));\n            }\n        }\n    }\n    return res;\n};\n\nvar numberOfDigit = function (num) {\n    var n = 0;\n    var tmp = 0;\n    for (var i = 5; i >= 0; i--) {\n        tmp = 1 << i;\n        if (num >= tmp) {\n            n++;\n            num -= tmp;\n        }\n    }\n    return n;\n};\n"))))}m.isMDXComponent=!0}}]);