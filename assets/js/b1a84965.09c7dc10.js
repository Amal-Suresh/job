"use strict";(self.webpackChunkjob=self.webpackChunkjob||[]).push([[6442],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),m=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=m(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=m(n),s=a,g=d["".concat(p,".").concat(s)]||d[s]||u[s]||i;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=s;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var m=2;m<i;m++)o[m]=n[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},8268:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>m});var r=n(7462),a=(n(7294),n(3905));const i={tags:["Hard","String","Dynamic Programming"]},o="Edit Distance",l={unversionedId:"algorithms/hard/edit-distance",id:"algorithms/hard/edit-distance",title:"Edit Distance",description:"Given two words word1 and word2, find the minimum number of operations required to convert word1 to word2.",source:"@site/interview/algorithms/hard/edit-distance.md",sourceDirName:"algorithms/hard",slug:"/algorithms/hard/edit-distance",permalink:"/algorithms/hard/edit-distance",draft:!1,editUrl:"https://github.com/izemil/job/edit/master/interview/algorithms/hard/edit-distance.md",tags:[{label:"Hard",permalink:"/tags/hard"},{label:"String",permalink:"/tags/string"},{label:"Dynamic Programming",permalink:"/tags/dynamic-programming"}],version:"current",frontMatter:{tags:["Hard","String","Dynamic Programming"]},sidebar:"tutorialSidebar",previous:{title:"Dungeon Game",permalink:"/algorithms/hard/dungeon-game"},next:{title:"Find Minimum in Rotated Sorted Array II",permalink:"/algorithms/hard/find-minimum-in-rotated-sorted-array-ii"}},p={},m=[],c={toc:m};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"edit-distance"},"Edit Distance"),(0,a.kt)("p",null,"Given two words ",(0,a.kt)("strong",{parentName:"p"},"word1")," and ",(0,a.kt)("strong",{parentName:"p"},"word2"),", find the minimum number of operations required to convert ",(0,a.kt)("strong",{parentName:"p"},"word1")," to ",(0,a.kt)("strong",{parentName:"p"},"word2"),"."),(0,a.kt)("p",null,"You have the following 3 operations permitted on a word:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Insert a character"),(0,a.kt)("li",{parentName:"ul"},"Delete a character"),(0,a.kt)("li",{parentName:"ul"},"Replace a character")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 1:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: word1 = \"horse\", word2 = \"ros\"\nOutput: 3\nExplanation:\nhorse -> rorse (replace 'h' with 'r')\nrorse -> rose (remove 'r')\nrose -> ros (remove 'e')\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 2:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: word1 = \"intention\", word2 = \"execution\"\nOutput: 5\nExplanation:\nintention -> inention (remove 't')\ninention -> enention (replace 'i' with 'e')\nenention -> exention (replace 'n' with 'x')\nexention -> exection (replace 'n' with 'c')\nexection -> execution (insert 'u')\n")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Solution"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"/**\n * @param {string} word1\n * @param {string} word2\n * @return {number}\n */\nvar minDistance = function (word1, word2) {\n    var n = word1.length;\n    var m = word2.length;\n    var dp = Array(n);\n\n    for (var i = 0; i < n; i++) {\n        dp[i] = Array(m);\n        for (var j = 0; j < m; j++) {\n            dp[i][j] = Math.min(\n                getDp(i - 1, j, dp) + 1,\n                getDp(i, j - 1, dp) + 1,\n                getDp(i - 1, j - 1, dp) + (word1[i] === word2[j] ? 0 : 1)\n            );\n        }\n    }\n\n    return getDp(n - 1, m - 1, dp);\n};\n\nvar getDp = function (i, j, dp) {\n    if (i < 0 && j < 0) return 0;\n    if (i < 0) return j + 1;\n    if (j < 0) return i + 1;\n    return dp[i][j];\n};\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Complexity:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Time complexity : O(m","*","n)."),(0,a.kt)("li",{parentName:"ul"},"Space complexity : Om","*","(n)."))))}d.isMDXComponent=!0}}]);