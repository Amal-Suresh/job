"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[205],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(t),h=r,m=p["".concat(s,".").concat(h)]||p[h]||d[h]||l;return t?a.createElement(m,i(i({ref:n},u),{},{components:t})):a.createElement(m,i({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=h;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[p]="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},7103:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const l={},i="JAVASCRIPT",o={unversionedId:"javascript/javascript",id:"javascript/javascript",title:"JAVASCRIPT",description:"-   Junior Level",source:"@site/docs/javascript/javascript.md",sourceDirName:"javascript",slug:"/javascript/",permalink:"/javascript-interview/docs/javascript/",draft:!1,editUrl:"https://github.com/izemil/javascript-interview/edit/master/docs/javascript/javascript.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"How to finish interview",permalink:"/javascript-interview/docs/finish"},next:{title:"NODEJS",permalink:"/javascript-interview/docs/nodejs/"}},s={},c=[{value:"Junior Level",id:"junior-level",level:2},{value:"What is Javascript?",id:"what-is-javascript",level:4},{value:"All JS Types",id:"all-js-types",level:4},{value:"Type converting",id:"type-converting",level:4},{value:"JS Operators",id:"js-operators",level:4},{value:"Usage of Map and Set Objects",id:"usage-of-map-and-set-objects",level:4},{value:"Usage of WeakMap and WeakSet Objects",id:"usage-of-weakmap-and-weakset-objects",level:4},{value:"Usage of callback fn",id:"usage-of-callback-fn",level:4},{value:"var vs. let vs. const",id:"var-vs-let-vs-const",level:4},{value:"Explain methods and properties",id:"explain-methods-and-properties",level:4},{value:"Purpose of \xabnew\xbb keyword?",id:"purpose-of-new-keyword",level:4},{value:"How to execute string as function",id:"how-to-execute-string-as-function",level:4},{value:"Ways to loop arrays",id:"ways-to-loop-arrays",level:4},{value:"Ways of conditions",id:"ways-of-conditions",level:4},{value:"Arrow functions: what is and specifics",id:"arrow-functions-what-is-and-specifics",level:4},{value:"what is the result",id:"what-is-the-result",level:4},{value:"Middle Level",id:"middle-level",level:2},{value:"What is Symbol type and its purpose?",id:"what-is-symbol-type-and-its-purpose",level:4},{value:"Pure functions",id:"pure-functions",level:4},{value:"Inheritance instanceof",id:"inheritance-instanceof",level:4},{value:"Heap data structure",id:"heap-data-structure",level:4},{value:"\u041a\u0430\u043a \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u0438\u0432\u0430\u0442\u043d\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0432 Javascript:",id:"\u043a\u0430\u043a-\u0441\u043e\u0437\u0434\u0430\u0442\u044c-\u043f\u0440\u0438\u0432\u0430\u0442\u043d\u0443\u044e-\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e-\u0432-javascript",level:4},{value:"Counter function as below",id:"counter-function-as-below",level:4},{value:"Promises vs. callback",id:"promises-vs-callback",level:4},{value:"Promise conditions and how to work with them:",id:"promise-conditions-and-how-to-work-with-them",level:5},{value:"Promise.all usecase",id:"promiseall-usecase",level:5},{value:"Work with context",id:"work-with-context",level:4},{value:"IIFE",id:"iife",level:4},{value:"Sort array below",id:"sort-array-below",level:4},{value:"OOP",id:"oop",level:4},{value:"Classes and instances",id:"classes-and-instances",level:5},{value:"Inheritance",id:"inheritance",level:5},{value:"Encapsulation",id:"encapsulation",level:5},{value:"Senior Level",id:"senior-level",level:2},{value:"Function overloading typescript",id:"function-overloading-typescript",level:4},{value:"concurrency, parallel execution, multithreading, asynchrony",id:"concurrency-parallel-execution-multithreading-asynchrony",level:4},{value:"Proxy object usecases",id:"proxy-object-usecases",level:4},{value:"SOLID patterns #TODO: https://coder-question.com/cq-blog/529020 and https://duncan-mcardle.medium.com/solid-principle-2-open-closed-javascript-fc49b577a377#:~:text=The%20open%2Dclosed%20principle%20says,the%20need%20to%20modify%20it.",id:"solid-patterns-todo-httpscoder-questioncomcq-blog529020-and-httpsduncan-mcardlemediumcomsolid-principle-2-open-closed-javascript-fc49b577a377textthe20open2dclosed20principle20saysthe20need20to20modify20it",level:4},{value:"What is using below?",id:"what-is-using-below",level:5},{value:"\u041f\u0420\u0418\u041d\u0426\u0418\u041f \u041e\u0422\u041a\u0420\u042b\u0422\u041e\u0421\u0422\u0418/\u0417\u0410\u041a\u0420\u042b\u0422\u041e\u0421\u0422\u0418(\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438 (\u043a\u043b\u0430\u0441\u0441\u044b, \u043c\u043e\u0434\u0443\u043b\u0438, \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0438 \u0442. \u043f.) \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043e\u0442\u043a\u0440\u044b\u0442\u044b \u0434\u043b\u044f \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f, \u043d\u043e \u0437\u0430\u043a\u0440\u044b\u0442\u044b \u0434\u043b\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f)",id:"\u043f\u0440\u0438\u043d\u0446\u0438\u043f-\u043e\u0442\u043a\u0440\u044b\u0442\u043e\u0441\u0442\u0438\u0437\u0430\u043a\u0440\u044b\u0442\u043e\u0441\u0442\u0438\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0435-\u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438-\u043a\u043b\u0430\u0441\u0441\u044b-\u043c\u043e\u0434\u0443\u043b\u0438-\u0444\u0443\u043d\u043a\u0446\u0438\u0438-\u0438-\u0442-\u043f-\u0434\u043e\u043b\u0436\u043d\u044b-\u0431\u044b\u0442\u044c-\u043e\u0442\u043a\u0440\u044b\u0442\u044b-\u0434\u043b\u044f-\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f-\u043d\u043e-\u0437\u0430\u043a\u0440\u044b\u0442\u044b-\u0434\u043b\u044f-\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f",level:5},{value:"Generators",id:"generators",level:4},{value:"Amazon interview",id:"amazon-interview",level:4}],u={toc:c};function p(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"javascript"},"JAVASCRIPT"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Junior-Level"},"Junior Level")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Middle-Level"},"Middle Level")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#Senior-Level"},"Senior Level"))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"junior-level"},"Junior Level"),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"what-is-javascript"},"What is Javascript?"),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"all-js-types"},"All JS Types"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"undefined"),(0,r.kt)("li",{parentName:"ol"},"null"),(0,r.kt)("li",{parentName:"ol"},"boolean"),(0,r.kt)("li",{parentName:"ol"},"string"),(0,r.kt)("li",{parentName:"ol"},"number"),(0,r.kt)("li",{parentName:"ol"},"bigint"),(0,r.kt)("li",{parentName:"ol"},"symbol"),(0,r.kt)("li",{parentName:"ol"},"object")),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"type-converting"},"Type converting"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// 1 => '1'\n\n// '1' => 1\n\n// some => false\n\n// some => true\n\n// some => Nan, what is Nan and what its type\n")),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"js-operators"},"JS Operators"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Assignment operators (=, +=, -=, ","*","=, /=), Logical Assignment operators (&&=, ||=, ??=)"),(0,r.kt)("li",{parentName:"ul"},"Comparison operators (== vs. ===)"),(0,r.kt)("li",{parentName:"ul"},"Arithmetic operators"),(0,r.kt)("li",{parentName:"ul"},"Logical operators (&&, ||, !)"),(0,r.kt)("li",{parentName:"ul"},"Conditional (ternary) operator"),(0,r.kt)("li",{parentName:"ul"},"Others: in, delete, typeof, instanceof, void")),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"usage-of-map-and-set-objects"},"Usage of Map and Set Objects"),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"usage-of-weakmap-and-weakset-objects"},"Usage of WeakMap and WeakSet Objects"),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"usage-of-callback-fn"},"Usage of callback fn"),(0,r.kt)("p",null,"Callback functions are fns that can be used as arguments (common examples: forEach, map, setTimeout)"),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"var-vs-let-vs-const"},"var vs. let vs. const"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'var a = 2;\nfoo(); // works because `foo()` declaration is "hoisted"\n\nfunction foo() {\n    a = 3;\n    console.log(a); // 3\n    var a; // declaration is "hoisted" to the top of `foo()`\n}\nconsole.log(a); // 2\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"explain-methods-and-properties"},"Explain methods and properties"),(0,r.kt)("p",null,"OOP has object way of describing, so Objects have properties (like color, length, value, etc) that store states and methods (like run, read, update, etc) that can change properties of the object or other objects and execute other methods."),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"purpose-of-new-keyword"},"Purpose of \xabnew\xbb keyword?"),(0,r.kt)("p",null,"It is used to create an instance of an object"),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"how-to-execute-string-as-function"},"How to execute string as function"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const scriptStr = \"console.log('hey');\";\n\neval(scriptStr);\n\nnew Function(scriptStr)();\n")),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"ways-to-loop-arrays"},"Ways to loop arrays"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const arr = [1, 2, 3, 4, 5];\n\n// for [in (iterage keys), of] loop, .map, .filter, .forEach\n")),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"ways-of-conditions"},"Ways of conditions"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// if-else\n\n// switch-case\n\n// object-key condition\n")),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"arrow-functions-what-is-and-specifics"},"Arrow functions: what is and specifics"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u0421\u0442\u0440\u0435\u043b\u043e\u0447\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 this, \u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 this \u043e\u043a\u0440\u0443\u0436\u0430\u044e\u0449\u0435\u0433\u043e \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430."),(0,r.kt)("li",{parentName:"ul"},"\u0421\u0442\u0440\u0435\u043b\u043e\u0447\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043d\u0435 \u0438\u043c\u0435\u044e\u0442 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 arguments, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432 \u0442\u0435\u043b\u0435 \u0441\u0442\u0440\u0435\u043b\u043e\u0447\u043d\u044b\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439 arguments \u0431\u0443\u0434\u0435\u0442 \u0441\u0441\u044b\u043b\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0432 \u043e\u043a\u0440\u0443\u0436\u0430\u044e\u0449\u0435\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438."),(0,r.kt)("li",{parentName:"ul"},"\u0421\u0442\u0440\u0435\u043b\u043e\u0447\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u044b \u043a\u0430\u043a \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 \u0438 \u0432\u044b\u0437\u043e\u0432\u0443\u0442 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0441 new."),(0,r.kt)("li",{parentName:"ul"},"\u041a\u043b\u044e\u0447\u0435\u0432\u043e\u0435 \u0441\u043b\u043e\u0432\u043e yield \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u043e \u0432 \u0442\u0435\u043b\u0435 \u0441\u0442\u0440\u0435\u043b\u043e\u0447\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438. \u041a\u0430\u043a \u0441\u043b\u0435\u0434\u0441\u0442\u0432\u0438\u0435 \u0441\u0442\u0440\u0435\u043b\u043e\u0447\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u044b \u043a\u0430\u043a \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u044b.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"'use strict';\nvar obj = {\n    i: 10,\n    b: () => console.log(this.i, this),\n    c: function () {\n        console.log(this.i, this);\n    },\n};\nobj.b(); // prints undefined, Window {...} (\u0438\u043b\u0438 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442)\nobj.c(); // prints 10, Object {...}\n")),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"what-is-the-result"},"what is the result"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var funcs = [];\nfor (var i = 0; i < 3; i++) {\n    funcs[i] = function () {\n        console.log('My value: ' + i);\n    };\n}\n\nfor (const f of funcs) {\n    f();\n}\n")),(0,r.kt)("p",null,"And classical solution with closure:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var funcs = [];\nfunction createfunc(i) {\n    return function () {\n        console.log('My value: ' + i);\n    };\n}\n\nfor (var i = 0; i < 3; i++) {\n    funcs[i] = createfunc(i);\n}\n\nfor (var j = 0; j < 3; j++) {\n    // and now let's run each one to see\n    funcs[j]();\n}\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"middle-level"},"Middle Level"),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"what-is-symbol-type-and-its-purpose"},"What is Symbol type and its purpose?"),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"pure-functions"},"Pure functions"),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"inheritance-instanceof"},"Inheritance instanceof"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"class Person {}\n\nclass Chief extends Person {}\n\nclass Programmer extends Person {}\n\nconst programmer = new Programmer();\n\nconsole.log(programmer instanceof Person);\nconsole.log(programmer instanceof Programmer);\nconsole.log(programmer instanceof Object);\nconsole.log(programmer instanceof Chief);\n")),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"heap-data-structure"},"Heap data structure"),(0,r.kt)("p",null,"A heap is a tree-based data structure which is an almost complete tree that satisfies the heap property."),(0,r.kt)("p",null,"There are two types of heaps, based on the heap property \u2014 MinHeap and MaxHeap."),(0,r.kt)("p",null,"MinHeap: The parent node is always less than the child nodes.\nMaxHeap: The parent node is always greater than or equal to the child nodes."),(0,r.kt)("p",null,"Heaps is primarily used for getting the minimum or the maximum value present in a heap in O(1) time."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Heap can be represent as arrays:\nconst minHeap = [1, 20, 30, 24, 26, 32, 39];\nconst maxHeap = [100, 80, 60, 77, 75, 58, 51];\n")),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"\u043a\u0430\u043a-\u0441\u043e\u0437\u0434\u0430\u0442\u044c-\u043f\u0440\u0438\u0432\u0430\u0442\u043d\u0443\u044e-\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e-\u0432-javascript"},"\u041a\u0430\u043a \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u0438\u0432\u0430\u0442\u043d\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0432 Javascript:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function func() {\n    const priv = 'secret code';\n    return function () {\n        return priv;\n    };\n}\nvar getPriv = func();\n")),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"counter-function-as-below"},"Counter function as below"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const counter = Counter();\ncounter.inc();\ncounter.dec();\n\nfunction Counter() {\n    let count = 0;\n\n    return {\n        inc() {\n            return (count += 1);\n        },\n        dec() {\n            return (count -= 1);\n        },\n    };\n}\n")),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"promises-vs-callback"},"Promises vs. callback"),(0,r.kt)("p",null,"Write wait functions based on callback and promise."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const waitPromise = (delay = new Promise((res) => setTimeout(() => res(), delay)));\nwaitPromise(2000).then(() => console.log('finish'));\n\nconst waitCb = (delay, cb) => setTimeout(() => cb(), delay);\nwaitCb(2000, () => console.log('finish 2'));\n")),(0,r.kt)("hr",null),(0,r.kt)("h5",{id:"promise-conditions-and-how-to-work-with-them"},"Promise conditions and how to work with them:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"pending: \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435, \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043e \u0438 \u043d\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u043e."),(0,r.kt)("li",{parentName:"ul"},"fulfilled: \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e."),(0,r.kt)("li",{parentName:"ul"},"rejected: \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0430 \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439.")),(0,r.kt)("hr",null),(0,r.kt)("h5",{id:"promiseall-usecase"},"Promise.all usecase"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Promise.all([new Promise(), new Promise(), new Promise()]);\n")),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"work-with-context"},"Work with context"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function fullName() {\n    return 'Hello, this is ' + this.first + ' ' + this.last;\n}\nconsole.log(fullName()); // => Hello this is undefined undefined\n")),(0,r.kt)("p",null,"\u041e\u0442\u0432\u0435\u0442"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// create a person object and pass its values to the fullName function\nconst person = { first: 'Foo', last: 'Bar' };\nconsole.log(fullName.bind(person)()); // => Hello this is Foo Bar\n")),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"iife"},"IIFE"),(0,r.kt)("p",null,"Immediately Invoked Function Expressions (IIFEs) \u2014 \u044d\u0442\u043e \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0430\u044f \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0441\u0440\u0430\u0437\u0443 \u0436\u0435 \u0432 \u043c\u0435\u0441\u0442\u0435 \u0435\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f."),(0,r.kt)("p",null,"\u0414\u043b\u044f \u0447\u0435\u0433\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'\u0428\u0430\u0431\u043b\u043e\u043d "\u043c\u043e\u0434\u0443\u043b\u044c" \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e IIFE \u0438 \u0437\u0430\u043c\u044b\u043a\u0430\u043d\u0438\u0439:')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var counter = (function () {\n    var i = 0;\n\n    return {\n        get: function () {\n            return i;\n        },\n        set: function (val) {\n            i = val;\n        },\n        increment: function () {\n            return ++i;\n        },\n    };\n})();\n\nconsole.log(counter.get()); // 0\ncounter.set(3);\nconsole.log(counter.increment()); // 4\n")),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"sort-array-below"},"Sort array below"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const arr = [0, 3, 2, 43, 57, 6, 23, 1, 554, 5, 45, 3, 7, 8];\n\narr.sort((a, b) => a - b);\n\nfunction sort(arr) {}\n")),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"oop"},"OOP"),(0,r.kt)("p",null,"Basic concepts of OOP: classes and instances, inheritance, and encapsulation."),(0,r.kt)("hr",null),(0,r.kt)("h5",{id:"classes-and-instances"},"Classes and instances"),(0,r.kt)("p",null,"In OOP, when we model a problem in terms of objects we create abstract definitions representing the types of object we want to have in our system."),(0,r.kt)("hr",null),(0,r.kt)("h5",{id:"inheritance"},"Inheritance"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"class Proffesor extends Person {}\nclass Student extends Person {}\n")),(0,r.kt)("p",null,"This feature - when a method has the same name, but a different implementation in different classes - is called polymorphism. When a method in a subclass replaces the implementation of the version in the superclass, we say that the subclass overrides the version in the superclass."),(0,r.kt)("hr",null),(0,r.kt)("h5",{id:"encapsulation"},"Encapsulation"),(0,r.kt)("p",null,"Objects provide an interface to other code that wants to use them, but maintain their own internal state. The object's internal state is kept private, meaning that it can only be accessed by the object's own methods, not from other objects. Keeping an object's internal state private, and in general making a clear division between its public interface and its private internal state, is called encapsulation."),(0,r.kt)("p",null,"This is a useful feature because it enables the programmer to change the internal implementation of an object without having to find and update all the code that uses it: it creates a kind of firewall between this object and the rest of the system."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"senior-level"},"Senior Level"),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"function-overloading-typescript"},"Function overloading typescript"),(0,r.kt)("p",null,"TypeScript provides the concept of function overloading. You can have multiple functions with the same name but different parameter types and return type."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function add(a: string, b: string): string;\nfunction add(a: number, b: number): number;\nfunction add(a: any, b: any): any {\n    return a + b;\n}\n")),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"concurrency-parallel-execution-multithreading-asynchrony"},"concurrency, parallel execution, multithreading, asynchrony"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://ru.stackoverflow.com/questions/445768/%D0%9C%D0%BD%D0%BE%D0%B3%D0%BE%D0%BF%D0%BE%D1%82%D0%BE%D1%87%D0%BD%D0%BE%D0%B5-vs.-%D0%B0%D1%81%D0%B8%D0%BD%D1%85%D1%80%D0%BE%D0%BD%D0%BD%D0%BE%D0%B5-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5"},"https://ru.stackoverflow.com/questions/445768/%D0%9C%D0%BD%D0%BE%D0%B3%D0%BE%D0%BF%D0%BE%D1%82%D0%BE%D1%87%D0%BD%D0%BE%D0%B5-vs.-%D0%B0%D1%81%D0%B8%D0%BD%D1%85%D1%80%D0%BE%D0%BD%D0%BD%D0%BE%D0%B5-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5")),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"proxy-object-usecases"},"Proxy object usecases"),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"solid-patterns-todo-httpscoder-questioncomcq-blog529020-and-httpsduncan-mcardlemediumcomsolid-principle-2-open-closed-javascript-fc49b577a377textthe20open2dclosed20principle20saysthe20need20to20modify20it"},"SOLID patterns #TODO: ",(0,r.kt)("a",{parentName:"h4",href:"https://coder-question.com/cq-blog/529020"},"https://coder-question.com/cq-blog/529020")," and ",(0,r.kt)("a",{parentName:"h4",href:"https://duncan-mcardle.medium.com/solid-principle-2-open-closed-javascript-fc49b577a377#:~:text=The%20open%2Dclosed%20principle%20says,the%20need%20to%20modify%20it"},"https://duncan-mcardle.medium.com/solid-principle-2-open-closed-javascript-fc49b577a377#:~:text=The%20open%2Dclosed%20principle%20says,the%20need%20to%20modify%20it"),"."),(0,r.kt)("p",null,"CHECK this: ",(0,r.kt)("a",{parentName:"p",href:"https://medium.com/webbdev/solid-4ffc018077da"},"https://medium.com/webbdev/solid-4ffc018077da")),(0,r.kt)("hr",null),(0,r.kt)("h5",{id:"what-is-using-below"},"What is using below?"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"class TodoList {\n    constructor() {\n        this.items = []\n    }\n\n    addItem(text) {\n        this.items.push(text)\n    }\n\n    removeItem(index) {\n        this.items = items.splice(index, 1)\n    }\n\n    toString() {\n        return this.items.toString()\n    }\n\n    save(filename) {\n        fs.writeFileSync(filename, this.toString())\n    }\n\n    load(filename) { // Some implementation }\n}\n")),(0,r.kt)("p",null,"\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u044d\u0442\u043e \u041f\u0440\u0438\u043d\u0446\u0438\u043f \u0435\u0434\u0438\u043d\u043e\u0439 \u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0441\u0442\u0438 (\u041f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043e \u043d\u0430 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u0435 \u0435\u0434\u0438\u043d\u043e\u0439 \u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0441\u0442\u0438). \u041f\u0440\u0438\u043c\u0435\u0440\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"class TodoList {\n    constructor() {\n        this.items = [];\n    }\n    addItem(text) {\n        this.items.push(text);\n    }\n    removeItem(index) {\n        this.items = items.splice(index, 1);\n    }\n    toString() {\n        return this.items.toString();\n    }\n}\n\nclass DatabaseManager {\n    saveToFile(data, filename) {\n        fs.writeFileSync(filename, data.toString());\n    }\n    loadFromFile(filename) {\n        // Some implementation\n    }\n}\n")),(0,r.kt)("hr",null),(0,r.kt)("h5",{id:"\u043f\u0440\u0438\u043d\u0446\u0438\u043f-\u043e\u0442\u043a\u0440\u044b\u0442\u043e\u0441\u0442\u0438\u0437\u0430\u043a\u0440\u044b\u0442\u043e\u0441\u0442\u0438\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0435-\u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438-\u043a\u043b\u0430\u0441\u0441\u044b-\u043c\u043e\u0434\u0443\u043b\u0438-\u0444\u0443\u043d\u043a\u0446\u0438\u0438-\u0438-\u0442-\u043f-\u0434\u043e\u043b\u0436\u043d\u044b-\u0431\u044b\u0442\u044c-\u043e\u0442\u043a\u0440\u044b\u0442\u044b-\u0434\u043b\u044f-\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f-\u043d\u043e-\u0437\u0430\u043a\u0440\u044b\u0442\u044b-\u0434\u043b\u044f-\u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f"},"\u041f\u0420\u0418\u041d\u0426\u0418\u041f \u041e\u0422\u041a\u0420\u042b\u0422\u041e\u0421\u0422\u0418/\u0417\u0410\u041a\u0420\u042b\u0422\u041e\u0421\u0422\u0418(\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438 (\u043a\u043b\u0430\u0441\u0441\u044b, \u043c\u043e\u0434\u0443\u043b\u0438, \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0438 \u0442. \u043f.) \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043e\u0442\u043a\u0440\u044b\u0442\u044b \u0434\u043b\u044f \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f, \u043d\u043e \u0437\u0430\u043a\u0440\u044b\u0442\u044b \u0434\u043b\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"class Coder {\n    constructor(fullName, language, hobby, education, workplace, position) {\n        this.fullName = fullName;\n        this.language = language;\n        this.hobby = hobby;\n        this.education = education;\n        this.workplace = workplace;\n        this.position = position;\n    }\n}\n\nclass CoderFilter {\n    filterByName(coders, fullName) {\n        return coders.filter((coder) => coder.fullName === fullName);\n    }\n\n    filterBySize(coders, language) {\n        return coders.filter((coder) => coder.language === language);\n    }\n\n    filterByHobby(coders, hobby) {\n        return coders.filter((coder) => coder.hobby === hobby);\n    }\n}\n")),(0,r.kt)("p",null,"The problem with CoderFilter is that if we want to filter by any other new property we have to change CodeFilter's code. Let's solve this problem by creating a filterByProp function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const filterByProp = (array, propName, value) => array.filter((element) => element[propName] === value);\n")),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"generators"},"Generators"),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"amazon-interview"},"Amazon interview"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'Question: You are given a dictionary containing thousands of words and a sentence with no spaces.\nWrite an algorithm to reconstruct the sentence by inserting spaces in the appropriate positions.\n\nExample:\n\n["the", "sky", "is", "blue", "the", "grass", "is", "green"]\n\ninput: "theskyisblue" output: "the sky is blue"\n\ninput: "thegrassisgreen" output: "the grass is green"\n\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {string} s\n * @param {string[]} wordDict\n * @return {string[]}\n */\nconst wordBreak = function (s, wordDict) {\n    var dp = Array(s.length);\n    var map = {};\n    var res = [];\n\n    for (var i = 0; i < wordDict.length; i++) {\n        map[wordDict[i]] = true;\n    }\n\n    return find(s, map, dp, 0);\n};\n\nconst find = function (s, map, dp, index) {\n    if (dp[index]) return dp[index];\n\n    var str = '';\n    var tmp = null;\n    var len = s.length;\n\n    dp[index] = [];\n\n    for (var i = index; i < len; i++) {\n        str = s.substring(index, i + 1);\n        if (!map[str]) continue;\n        if (i === len - 1) {\n            dp[index].push(str);\n            break;\n        }\n        tmp = find(s, map, dp, i + 1);\n        for (var j = 0; j < tmp.length; j++) {\n            dp[index].push(str + ' ' + tmp[j]);\n        }\n    }\n\n    return dp[index];\n};\n")))}p.isMDXComponent=!0}}]);