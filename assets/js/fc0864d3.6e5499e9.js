"use strict";(self.webpackChunkjob=self.webpackChunkjob||[]).push([[3602],{3905:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>m});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),l=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},d=function(e){var r=l(e.components);return n.createElement(s.Provider,{value:r},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},h=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(t),h=o,m=u["".concat(s,".").concat(h)]||u[h]||p[h]||a;return t?n.createElement(m,i(i({ref:r},d),{},{components:t})):n.createElement(m,i({ref:r},d))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=h;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c[u]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=t[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}h.displayName="MDXCreateElement"},4304:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var n=t(7462),o=(t(7294),t(3905));const a={},i="What are error boundaries in React?",c={unversionedId:"questions/reactjs/react-error-boundaries",id:"questions/reactjs/react-error-boundaries",title:"What are error boundaries in React?",description:"Error boundaries\xa0are components that catch JavaScript errors anywhere in their child component tree, log those errors, and display a fallback UI instead of the component tree that crashed.",source:"@site/interview/questions/reactjs/react-error-boundaries.md",sourceDirName:"questions/reactjs",slug:"/questions/reactjs/react-error-boundaries",permalink:"/questions/reactjs/react-error-boundaries",draft:!1,editUrl:"https://github.com/izemil/job/edit/master/interview/questions/reactjs/react-error-boundaries.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"What is the diff between Presentational vs Container components?",permalink:"/questions/reactjs/presentational-vs-container-components"},next:{title:"What is React Fiber?",permalink:"/questions/reactjs/react-fiber"}},s={},l=[{value:"In which scenarios error boundaries do not catch errors?",id:"in-which-scenarios-error-boundaries-do-not-catch-errors",level:2},{value:"What is the difference between try catch block and error boundaries?",id:"what-is-the-difference-between-try-catch-block-and-error-boundaries",level:2}],d={toc:l};function u(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"what-are-error-boundaries-in-react"},"What are error boundaries in React?"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Error boundaries"),"\xa0are components that catch JavaScript errors anywhere in their child component tree, log those errors, and display a fallback UI instead of the component tree that crashed."),(0,o.kt)("p",null,"A class component becomes an error boundary if it defines a new lifecycle method called\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"componentDidCatch(error, info)"),"\xa0or\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"static getDerivedStateFromError()")," :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    logErrorToMyService(error, info);\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>{"Something went wrong."}</h1>;\n    }\n    return this.props.children;\n  }\n}\n')),(0,o.kt)("p",null,"After that use it as a regular component:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"<ErrorBoundary>\n  <MyWidget />\n</ErrorBoundary>\n")),(0,o.kt)("h2",{id:"in-which-scenarios-error-boundaries-do-not-catch-errors"},"In which scenarios error boundaries do not catch errors?"),(0,o.kt)("p",null,"Below are the cases in which error boundaries doesn't work:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Inside Event handlers"),(0,o.kt)("li",{parentName:"ol"},"Asynchronous code using\xa0",(0,o.kt)("inlineCode",{parentName:"li"},"setTimeout")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"requestAnimationFrame"),"\xa0callbacks"),(0,o.kt)("li",{parentName:"ol"},"During Server side rendering"),(0,o.kt)("li",{parentName:"ol"},"When errors thrown in the error boundary code itself")),(0,o.kt)("h2",{id:"what-is-the-difference-between-try-catch-block-and-error-boundaries"},"What is the difference between try catch block and error boundaries?"),(0,o.kt)("p",null,"Try catch block works with imperative code, whereas error boundaries are meant for declarative code to render on the screen."),(0,o.kt)("p",null,"For example, the try catch block used for below imperative code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"try {\n  showButton();\n} catch (error) {\n  // ...\n}\n")),(0,o.kt)("p",null,"Whereas error boundaries wrap declarative code as below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"<ErrorBoundary>\n  <MyComponent />\n</ErrorBoundary>\n")),(0,o.kt)("p",null,"So if an error occurs in a\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"componentDidUpdate"),"\xa0method caused by a\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"setState"),"\xa0somewhere deep in the tree, it will still correctly propagate to the closest error boundary."))}u.isMDXComponent=!0}}]);