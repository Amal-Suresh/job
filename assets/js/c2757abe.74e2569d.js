"use strict";(self.webpackChunkjob=self.webpackChunkjob||[]).push([[5506],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6544:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={},i='Explain the CSS "box model"',l={unversionedId:"questions/frontend/css-box-model",id:"questions/frontend/css-box-model",title:'Explain the CSS "box model"',description:"The CSS box model is a rectangular layout paradigm for HTML elements that consists of the following:",source:"@site/interview/questions/frontend/css-box-model.md",sourceDirName:"questions/frontend",slug:"/questions/frontend/css-box-model",permalink:"/questions/frontend/css-box-model",draft:!1,editUrl:"https://github.com/izemil/job/edit/master/interview/questions/frontend/css-box-model.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"What is At-Rule `@`?",permalink:"/questions/frontend/css-at-rule"},next:{title:"How does CSS work under the hood?",permalink:"/questions/frontend/css-engine"}},s={},p=[],c={toc:p};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"explain-the-css-box-model"},'Explain the CSS "box model"'),(0,o.kt)("p",null,"The CSS box model is a rectangular layout paradigm for HTML elements that consists of the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Content"),": The content of the box, where text and images appear"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Padding"),": A transparent area surrounding the content (i.e., the amount of space between the border and the content)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Border"),": A border surrounding the padding (if any) and content"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Margin"),": A transparent area surrounding the border (i.e., the amount of space between the border and any neighboring elements)")),(0,o.kt)("img",{src:"/img/box-model.png",alt:"box-model"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Syntax:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},"box-sizing: content-box | border-box;\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"content-box"),": Default. The width and height properties (and min/max properties) includes only the content. ",(0,o.kt)("strong",{parentName:"p"},"Border and padding are not included"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"border-box"),": The width and height properties (and min/max properties) ",(0,o.kt)("strong",{parentName:"p"},"includes content, padding and border"),"."))}d.isMDXComponent=!0}}]);