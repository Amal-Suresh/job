"use strict";(self.webpackChunkjob=self.webpackChunkjob||[]).push([[1428],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(r),m=a,d=u["".concat(c,".").concat(m)]||u[m]||f[m]||o;return r?n.createElement(d,s(s({ref:t},p),{},{components:r})):n.createElement(d,s({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7034:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={},s="What is ReactJS `ref`?",i={unversionedId:"questions/reactjs/reactjs-refs",id:"questions/reactjs/reactjs-refs",title:"What is ReactJS `ref`?",description:"Refs are used to get reference to a DOM node or an instance of a component in React. Good examples of when to use refs are for managing focus/text selection, triggering imperative animations, or integrating with third-party DOM libraries. You should avoid using string refs and inline ref callbacks. Callback refs are advised by React.",source:"@site/interview/questions/reactjs/reactjs-refs.md",sourceDirName:"questions/reactjs",slug:"/questions/reactjs/reactjs-refs",permalink:"/questions/reactjs/reactjs-refs",draft:!1,editUrl:"https://github.com/izemil/job/edit/master/interview/questions/reactjs/reactjs-refs.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Explain a ReactJS lifecycle",permalink:"/questions/reactjs/reactjs-lifecycle"},next:{title:"What are the diff\xa0`redux-saga`\xa0vs\xa0`redux-thunk`?",permalink:"/questions/reactjs/redux-saga-vs-thunk"}},c={},l=[{value:"How to create refs?",id:"how-to-create-refs",level:2},{value:"What are forward refs?",id:"what-are-forward-refs",level:2}],p={toc:l};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"what-is-reactjs-ref"},"What is ReactJS ",(0,a.kt)("inlineCode",{parentName:"h1"},"ref"),"?"),(0,a.kt)("p",null,"Refs are used to get reference to a DOM node or an instance of a component in React. Good examples of when to use refs are for managing focus/text selection, triggering imperative animations, or integrating with third-party DOM libraries. You should avoid using string refs and inline ref callbacks. Callback refs are advised by React."),(0,a.kt)("h2",{id:"how-to-create-refs"},"How to create refs?"),(0,a.kt)("p",null,"There are two approaches"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"This is a recently added approach.\xa0",(0,a.kt)("em",{parentName:"li"},"Refs"),"\xa0are created using\xa0",(0,a.kt)("inlineCode",{parentName:"li"},"React.createRef()"),"\xa0method and attached to React elements via the\xa0",(0,a.kt)("inlineCode",{parentName:"li"},"ref"),"\xa0attribute. In order to use\xa0",(0,a.kt)("em",{parentName:"li"},"refs"),"\xa0throughout the component, just assign the\xa0",(0,a.kt)("em",{parentName:"li"},"ref"),"\xa0to the instance property within constructor.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"class MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n  }\n  \n  render() {\n    return <div ref={this.myRef} />;\n  }\n}\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"You can also use ref callbacks approach regardless of React version. For example, the search bar component's input element is accessed as follows,")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'class SearchBar extends Component {\n    constructor(props) {\n        super(props);\n        this.txtSearch = null;\n        this.state = { term: "" };\n        \n        this.setInputSearchRef = (e) => {\n            this.txtSearch = e;\n        };\n    }\n  \n    onInputChange(event) {\n        this.setState({ term: this.txtSearch.value });\n    }\n      \n    render() {\n        return (\n            <input\n                value={this.state.term}\n                onChange={this.onInputChange.bind(this)}\n                ref={this.setInputSearchRef}\n            />\n        );\n    }\n} \n')),(0,a.kt)("p",null,"You can also use\xa0",(0,a.kt)("em",{parentName:"p"},"refs"),"\xa0in function components using\xa0",(0,a.kt)("strong",{parentName:"p"},"closures"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note"),": You can also use inline ref callbacks even though it is not a recommended approach."),(0,a.kt)("h2",{id:"what-are-forward-refs"},"What are forward refs?"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Ref forwarding"),"\xa0is a feature that lets some components take a\xa0",(0,a.kt)("em",{parentName:"p"},"ref"),"\xa0they receive, and pass it further down to a child."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'const ButtonElement = React.forwardRef((props, ref) => (\n  <button ref={ref} className="CustomButton">\n    {props.children}\n  </button>\n));\n\n// Create ref to the DOM button:\nconst ref = React.createRef();\n<ButtonElement ref={ref}>{"Forward Ref"}</ButtonElement>;\n')))}u.isMDXComponent=!0}}]);