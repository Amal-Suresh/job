"use strict";(self.webpackChunkjob=self.webpackChunkjob||[]).push([[3593],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,f=c["".concat(l,".").concat(m)]||c[m]||d[m]||o;return n?r.createElement(f,s(s({ref:t},u),{},{components:n})):r.createElement(f,s({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1822:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={},s="What is JWT?",i={unversionedId:"questions/nodejs/nodejs-jwt",id:"questions/nodejs/nodejs-jwt",title:"What is JWT?",description:"JSON Web Token (JWT) is an open standard that defines a compact and self-contained way of securely transmitting information between parties as a JSON object. This information can be verified and trusted because it is digitally signed.",source:"@site/interview/questions/nodejs/nodejs-jwt.md",sourceDirName:"questions/nodejs",slug:"/questions/nodejs/nodejs-jwt",permalink:"/questions/nodejs/nodejs-jwt",draft:!1,editUrl:"https://github.com/izemil/job/edit/master/interview/questions/nodejs/nodejs-jwt.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"What are the key features of NodeJS?",permalink:"/questions/nodejs/nodejs-features"},next:{title:"What is a middleware in NodeJS?",permalink:"/questions/nodejs/nodejs-middleware"}},l={},p=[],u={toc:p};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"what-is-jwt"},"What is JWT?"),(0,a.kt)("p",null,"JSON Web Token (JWT) is an open standard that defines a compact and self-contained way of securely transmitting information between parties as a JSON object. This information can be verified and trusted because it is digitally signed."),(0,a.kt)("p",null,"There are some advantages of using JWT for authorization:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Purely stateless. No additional server or infra required to store session information."),(0,a.kt)("li",{parentName:"ul"},"It can be easily shared among services.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Syntax:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"jwt.sign(payload, secretOrPrivateKey, [options, callback])\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Header"),"\xa0- Consists of two parts: the type of token (i.e., JWT) and the signing algorithm (i.e., HS512)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Payload"),"\xa0- Contains the claims that provide information about a user who has been authenticated along with other information such as token expiration time."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Signature"),"\xa0- Final part of a token that wraps in the encoded header and payload, along with the algorithm and a secret")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Installation:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm install jsonwebtoken bcryptjs --save\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"AuthController.js","AuthController.js":!0},"const express = require('express');\nconst router = express.Router();\nconst bodyParser = require('body-parser');\nconst User = require('../user/User');\n\nconst jwt = require('jsonwebtoken');\nconst bcrypt = require('bcryptjs');\nconst config = require('../config');\n\n\nrouter.use(bodyParser.urlencoded({ extended: false }));\nrouter.use(bodyParser.json());\n\nrouter.post('/sign-up', function(req, res) {\n    const { name, email, password } = req.body;\n    const hashedPassword = bcrypt.hashSync(password, 8);\n  \n    User.create({\n        name,\n        email,\n        password: hashedPassword\n    }, (err, user) => {\n        if (err) {\n            return res.status(500).send(\"There was a problem registering the user.\")\n        }\n    \n        const token = jwt.sign({ id: user._id }, config.secret, {\n            expiresIn: 86400 // expires in 24 hours\n        });\n    \n        res.status(200).send({ auth: true, token });\n    });\n});\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"config.js:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n  'secret': 'supersecret'\n};\n")),(0,a.kt)("p",null,"The\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"jwt.sign()"),"\xa0method takes a payload and the secret key defined in\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"config.js"),"\xa0as parameters. It creates a unique string of characters representing the payload. In our case, the payload is an object containing only the id of the user."))}c.isMDXComponent=!0}}]);