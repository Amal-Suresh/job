"use strict";(self.webpackChunkjob=self.webpackChunkjob||[]).push([[709],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),f=i,d=u["".concat(l,".").concat(f)]||u[f]||m[f]||o;return n?r.createElement(d,a(a({ref:t},c),{},{components:n})):r.createElement(d,a({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:i,a[1]=s;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},956:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const o={},a="Explain the diff `translate` vs positioning",s={unversionedId:"questions/frontend/translate-vs-position",id:"questions/frontend/translate-vs-position",title:"Explain the diff `translate` vs positioning",description:"translate()\xa0is a value of CSS\xa0transform. Changing\xa0transform\xa0or\xa0opacity\xa0does not trigger browser reflow or repaint but does trigger compositions; whereas changing the absolute positioning triggers\xa0reflow.\xa0transform\xa0causes the browser to create a GPU layer for the element but changing absolute positioning properties uses the CPU. Hence\xa0translate()\xa0is more efficient and will result in shorter paint times for smoother animations.",source:"@site/interview/questions/frontend/translate-vs-position.md",sourceDirName:"questions/frontend",slug:"/questions/frontend/translate-vs-position",permalink:"/questions/frontend/translate-vs-position",draft:!1,editUrl:"https://github.com/izemil/job/edit/master/interview/questions/frontend/translate-vs-position.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Explain the diff Tasks vs Microtasks",permalink:"/questions/frontend/tasks-vs-microtasks"},next:{title:"What is UI/UX?",permalink:"/questions/frontend/ui-ux"}},l={},p=[],c={toc:p};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"explain-the-diff-translate-vs-positioning"},"Explain the diff ",(0,i.kt)("inlineCode",{parentName:"h1"},"translate")," vs positioning"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"translate()"),"\xa0is a value of CSS\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"transform"),". Changing\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"transform"),"\xa0or\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"opacity"),"\xa0does not trigger browser reflow or repaint but does trigger compositions; whereas changing the absolute positioning triggers\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"reflow"),".\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"transform"),"\xa0causes the browser to create a GPU layer for the element but changing absolute positioning properties uses the CPU. Hence\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"translate()"),"\xa0is more efficient and will result in shorter paint times for smoother animations."),(0,i.kt)("p",null,"When using\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"translate()"),", the element still occupies its original space (sort of like\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"position: relative"),"), unlike in changing the absolute positioning."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example:")),(0,i.kt)("p",null,"If we combine\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"position:relative"),"\xa0with one of the offset properties\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"top"),",\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"bottom"),",\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"left"),"\xa0or\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"right"),"\xa0the element will be moved from its original place in the layout whilst preserving the space in the document it once occupied. The element will be moved on to a new layer and its \u201clayer order\u201d or its stacking order can then be controlled with the\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"z-index"),"\xa0property."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-css"},".thing {\n  position: relative;\n  top: 100px;\n  left: 50px;\n}\n")),(0,i.kt)("p",null,"In the above example the element will be moved 100px away from the top and 50px away from the left of its original position."),(0,i.kt)("p",null,"When using\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"transform:translate(x,y)"),"\xa0we get a very similar visual result to using relative position. The same result as above could be achieved with the following snippet:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-css"},".thing {\n  transform: translate(50px, 100px);\n}\n")),(0,i.kt)("p",null,"In this case, we are translating the coordinates of the element by\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"50px"),"\xa0along the x-axis and\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"100px"),"\xa0along the y-axis. The end result is visually the same as the previous\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"position"),"\xa0example."))}u.isMDXComponent=!0}}]);