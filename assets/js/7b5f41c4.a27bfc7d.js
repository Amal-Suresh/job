"use strict";(self.webpackChunkjob=self.webpackChunkjob||[]).push([[7442],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=p(r),h=s,f=d["".concat(c,".").concat(h)]||d[h]||u[h]||o;return r?n.createElement(f,a(a({ref:t},l),{},{components:r})):n.createElement(f,a({ref:t},l))}));function f(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=r.length,a=new Array(o);a[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[d]="string"==typeof e?e:s,a[1]=i;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},8137:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=r(7462),s=(r(7294),r(3905));const o={},a="What is the diff between process vs threads in NodeJS?",i={unversionedId:"questions/nodejs/process-vs-thread",id:"questions/nodejs/process-vs-thread",title:"What is the diff between process vs threads in NodeJS?",description:"1. Process:",source:"@site/interview/questions/nodejs/process-vs-thread.md",sourceDirName:"questions/nodejs",slug:"/questions/nodejs/process-vs-thread",permalink:"/questions/nodejs/process-vs-thread",draft:!1,editUrl:"https://github.com/izemil/job/edit/master/interview/questions/nodejs/process-vs-thread.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"What is the role of the package-lock.json?",permalink:"/questions/nodejs/package-lock-json"},next:{title:"What is the diff between put vs patch?",permalink:"/questions/nodejs/put-vs-patch"}},c={},p=[],l={toc:p};function d(e){let{components:t,...r}=e;return(0,s.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"what-is-the-diff-between-process-vs-threads-in-nodejs"},"What is the diff between process vs threads in NodeJS?"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"1. Process:")),(0,s.kt)("p",null,"Processes are basically the programs that are dispatched from the ready state and are scheduled in the CPU for execution. PCB (Process Control Block) holds the concept of process. A process can create other processes which are known as Child Processes. The process takes more time to terminate and it is isolated means it does not share the memory with any other process."),(0,s.kt)("p",null,"The process can have the following states new, ready, running, waiting, terminated, and suspended."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"2. Thread:")),(0,s.kt)("p",null,"Thread is the segment of a process which means a process can have multiple threads and these multiple threads are contained within a process. A thread has three states: Running, Ready, and Blocked."),(0,s.kt)("p",null,"The thread takes less time to terminate as compared to the process but unlike the process, threads do not isolate."))}d.isMDXComponent=!0}}]);