"use strict";(self.webpackChunkjob=self.webpackChunkjob||[]).push([[5923],{1730:(e,t,n)=>{n.d(t,{Z:()=>T});var s=n(7294),a=n(4646),r=n(3612),l=n(6010),i=n(7462),u=n(460),o=n.n(u),m=n(3746),c=n(2949),p=n(7694),d=n(1418);const g="editor_NE6_";function h(e){const{code:t,onChange:n}=e,{colorMode:a}=(0,c.I)(),r="dark"===a?d.Z:p.Z;return s.createElement(o(),{value:t,onValueChange:e=>{n(e)},highlight:e=>s.createElement(m.ZP,(0,i.Z)({},m.lG,{theme:r,code:e,language:"typescript"}),(e=>{let{className:t,style:n,tokens:a,getLineProps:r,getTokenProps:l}=e;return s.createElement(s.Fragment,null,a.map(((e,t)=>s.createElement("div",r({line:e,key:t}),e.map(((e,t)=>s.createElement("span",l({token:e,key:t}))))))))})),padding:10,insertSpaces:!0,tabSize:4,className:g,style:r.plain})}const f="browserWindow_my1Q",k="browserWindowHeader_jXSR",y="buttons_uHc7",N="browserWindowAddressBar_Pd8y",S="dot_giz1",E="browserWindowBody_Idgs";function b(e){let{children:t,minHeight:n,url:a}=e;return s.createElement("div",{className:f,style:{minHeight:n}},s.createElement("div",{className:k},s.createElement("div",{className:y},s.createElement("span",{className:S,style:{background:"#f25f58"}}),s.createElement("span",{className:S,style:{background:"#fbbe3c"}}),s.createElement("span",{className:S,style:{background:"#58cb42"}})),a&&s.createElement("div",{className:(0,l.Z)(N,"text--truncate")},a)),s.createElement("div",{className:E},t))}const v="tools_Q6LD",C="run_Nfcz",w="status_vbKK",$="testCases_IQq2";var Z;!function(e){e.SUCCESS="success",e.FAILURE="failure"}(Z||(Z={}));const x=e=>{const t=e.match(/function .+\(/gi);return t&&t[0]?t[0].replace(/(function)|[|\(\) ]/gi,""):"main"};function T(e){const{placeholder:t,tests:n}=e,[i,u]=(0,s.useState)(t),[o,m]=(0,s.useState)([]),[c,p]=(0,s.useState)(""),d=(0,s.useMemo)((()=>o.filter((e=>e.status===Z.SUCCESS)).length),[o]),g=(0,s.useMemo)((()=>d===o.length),[d,o]);return s.createElement(b,{minHeight:400},s.createElement("div",{className:v},0!==o.length?s.createElement("div",{className:(0,l.Z)(w,"alert",g?"alert--success":"alert--warning")},"Status: ",g?"Success":`Failure (${d}/${o.length})`):s.createElement("div",{className:(0,l.Z)(w)},"Write your solution:"),s.createElement("button",{className:(0,l.Z)("button button--primary",C),onClick:()=>{const e=[];let t="",s=0;for(const r of n){const{input:n,output:l}=r,u=`${n.map((e=>JSON.stringify(e))).join(", ")}`,o=x(i);let m,c="";c+=`${i};`,c+=`return ${o}(${u});`;try{m=new Function(c)()}catch(a){t=String(a)}const p=JSON.stringify(m)===JSON.stringify(l);console.log(`${s+1}. ${p?"Successful":"Failed"} Test: (${u}) => ${m} expected ${l}`),e.push({index:s,status:p?Z.SUCCESS:Z.FAILURE,result:m}),s+=1}m(e),p(t)}},"Run")),s.createElement(h,{code:i,onChange:u}),s.createElement("div",{className:$},c&&s.createElement(r.Z,{type:"danger",title:"Error"},c),n.map(((e,t)=>{const n=o[t],r=n?.status,l=r===Z.SUCCESS,i=r===Z.FAILURE;return s.createElement(a.Z,{key:`${t}`,language:"md",title:`Test Case ${t+1} ${l?"\u2705":""}${i?"\ud83d\udeab":""}`},(e=>{let t="";return t+=`Input: ${e.input.map((e=>JSON.stringify(e))).join(", ")}\n`,t+=`Output: ${JSON.stringify(e.output)}`,t})(e),i?`\nResult: ${JSON.stringify(n.result)}`:"")}))))}},6831:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>u,toc:()=>m});var s=n(7462),a=(n(7294),n(3905)),r=n(1730);const l={tags:["Medium","Array","Two Pointers"],title:"Sum of the 3 Closest"},i=void 0,u={unversionedId:"algorithms/medium/sum-3-closest",id:"algorithms/medium/sum-3-closest",title:"Sum of the 3 Closest",description:"Given an array nums of n integers and an integer target, find three integers in nums\xa0such that the sum is closest to\xa0target. Return the sum of the three integers. You may assume that each input would have exactly one solution.",source:"@site/interview/algorithms/medium/sum-3-closest.md",sourceDirName:"algorithms/medium",slug:"/algorithms/medium/sum-3-closest",permalink:"/algorithms/medium/sum-3-closest",draft:!1,editUrl:"https://github.com/izemil/job/edit/master/interview/algorithms/medium/sum-3-closest.md",tags:[{label:"Medium",permalink:"/tags/medium"},{label:"Array",permalink:"/tags/array"},{label:"Two Pointers",permalink:"/tags/two-pointers"}],version:"current",frontMatter:{tags:["Medium","Array","Two Pointers"],title:"Sum of the 3 Closest"},sidebar:"tutorialSidebar",previous:{title:"Binary Tree Preorder Traversal",permalink:"/algorithms/medium/binary-tree-preorder-traversal"},next:{title:"Sum of the 3 Zero",permalink:"/algorithms/medium/sum-3"}},o={},m=[],c={toc:m};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,s.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Given an array ",(0,a.kt)("inlineCode",{parentName:"p"},"nums")," of ",(0,a.kt)("strong",{parentName:"p"},"n")," integers and an integer ",(0,a.kt)("inlineCode",{parentName:"p"},"target"),", find three integers in ",(0,a.kt)("inlineCode",{parentName:"p"},"nums"),"\xa0such that the sum is closest to\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"target"),". Return the sum of the three integers. You may assume that each input would have exactly one solution."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: nums = [-1, 2, 1, -4], target = 1\nOutput: 2\nExplanation: The sum that is closest to the target is 2 (-1 + 2 + 1 = 2)\n")),(0,a.kt)(r.Z,{placeholder:"function main (nums, target) {\n    return;\n}",tests:[{input:[[-1,2,1,-4],1],output:2},{input:[[-1,20,10,14,12,13],13],output:21}],mdxType:"Algo"}),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Solution"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Complexity:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Time complexity: O(n^2)."),(0,a.kt)("li",{parentName:"ul"},"Space complexity: O(1).")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"function threeSumClosest(nums, target) {\n    let len = nums.length;\n    let res = nums[0] + nums[1] + nums[2];\n    let sum = 0;\n    let l = 0;\n    let r = 0;\n\n    nums.sort((a, b) => a - b);\n\n    for (let i = 0; i < len - 2; i++) {\n        if (i > 0 && nums[i] === nums[i - 1]) continue;\n        l = i + 1;\n        r = len - 1;\n        while (l < r) {\n            sum = nums[i] + nums[l] + nums[r];\n            if (sum < target) {\n                l++;\n            } else if (sum > target) {\n                r--;\n            } else {\n                return sum;\n            }\n            if (Math.abs(sum - target) < Math.abs(res - target)) res = sum;\n        }\n    }\n    return res;\n}\n"))))}p.isMDXComponent=!0}}]);