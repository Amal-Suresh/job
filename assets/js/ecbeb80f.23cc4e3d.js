"use strict";(self.webpackChunkjob=self.webpackChunkjob||[]).push([[4997],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>b});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function d(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):d(d({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=u(t),f=a,b=s["".concat(l,".").concat(f)]||s[f]||p[f]||i;return t?r.createElement(b,d(d({ref:n},c),{},{components:t})):r.createElement(b,d({ref:n},c))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,d=new Array(i);d[0]=f;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[s]="string"==typeof e?e:a,d[1]=o;for(var u=2;u<i;u++)d[u]=t[u];return r.createElement.apply(null,d)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},2125:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>s,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var r=t(7462),a=(t(7294),t(3905));const i={},d="Explain the difference between null, undefined and undeclared",o={unversionedId:"questions/javascript/diff-null-undefined-undeclared",id:"questions/javascript/diff-null-undefined-undeclared",title:"Explain the difference between null, undefined and undeclared",description:"null and undefined are both values that can be assigned to variables, while undeclared refers to a variable or property that has not yet been declared or defined. Additionally, null and undefined are values that can be compared and tested for equality, while undeclared is a reference error that cannot be handled or tested for.",source:"@site/interview/questions/javascript/diff-null-undefined-undeclared.md",sourceDirName:"questions/javascript",slug:"/questions/javascript/diff-null-undefined-undeclared",permalink:"/questions/javascript/diff-null-undefined-undeclared",draft:!1,editUrl:"https://github.com/izemil/job/edit/master/interview/questions/javascript/diff-null-undefined-undeclared.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"What tools do you use when debugging?",permalink:"/questions/javascript/debugging"},next:{title:"How do you handle errors in JavaScript?",permalink:"/questions/javascript/error-handling"}},l={},u=[],c={toc:u};function s(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"explain-the-difference-between-null-undefined-and-undeclared"},"Explain the difference between null, undefined and undeclared"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"null")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"undefined")," are both values that can be assigned to variables, while ",(0,a.kt)("inlineCode",{parentName:"p"},"undeclared")," refers to a variable or property that has not yet been declared or defined. Additionally, ",(0,a.kt)("inlineCode",{parentName:"p"},"null")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"undefined")," are values that can be compared and tested for equality, while ",(0,a.kt)("inlineCode",{parentName:"p"},"undeclared")," is a reference error that cannot be handled or tested for."))}s.isMDXComponent=!0}}]);