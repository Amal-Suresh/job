"use strict";(self.webpackChunkjob=self.webpackChunkjob||[]).push([[3532],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>v});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=c(n),d=i,v=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(v,s(s({ref:t},p),{},{components:n})):r.createElement(v,s({ref:t},p))}));function v(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=d;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[u]="string"==typeof e?e:i,s[1]=a;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6033:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const o={},s="What is an Event Emitter in NodeJS?",a={unversionedId:"questions/nodejs/event-emitter",id:"questions/nodejs/event-emitter",title:"What is an Event Emitter in NodeJS?",description:"The EventEmitter class is a built-in class in Node.js that allows objects to emit events and register listeners for those events. It is a useful way to implement a publish-subscribe pattern, where an object can publish events to which other objects can subscribe.",source:"@site/interview/questions/nodejs/event-emitter.md",sourceDirName:"questions/nodejs",slug:"/questions/nodejs/event-emitter",permalink:"/questions/nodejs/event-emitter",draft:!1,editUrl:"https://github.com/izemil/job/edit/master/interview/questions/nodejs/event-emitter.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"What is daemon process?",permalink:"/questions/nodejs/daemon-process"},next:{title:"Why should you separate express `app` and `server`?",permalink:"/questions/nodejs/express-app-vs-server"}},l={},c=[],p={toc:c};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"what-is-an-event-emitter-in-nodejs"},"What is an Event Emitter in NodeJS?"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"EventEmitter")," class is a built-in class in Node.js that allows objects to emit events and register listeners for those events. It is a useful way to implement a publish-subscribe pattern, where an object can publish events to which other objects can subscribe."),(0,i.kt)("p",null,"Here is an example of how to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"EventEmitter")," class in Node.js:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:"ee.js","ee.js":!0},"const EventEmitter = require('events');\n\nclass MyEmitter extends EventEmitter {}\n\nconst ee = new MyEmitter();\n\nee.on('ping', () => console.log('pong'));\nee.on('start', (start, end) => console.log(`started from ${start} to ${end}`));\nee.emit('start', 1, 100);\n")),(0,i.kt)("p",null,"Try to experiment with the file into REPL with command: ",(0,i.kt)("inlineCode",{parentName:"p"},'node -i -e "$(< ./ee.js)"')," (the command starts input-output loop with injected file)."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},".emit()"),"\xa0- this method in event emitter is to emit an event in module"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},".on()"),"\xa0- this method is to listen to data on a registered event in node.js"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},".once()"),"\xa0- it listen to data on a registered event only once."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},".addListener()"),"\xa0- it checks if the listener is registered for an event."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},".removeListener()"),"\xa0- it removes the listener for an event.")))}u.isMDXComponent=!0}}]);