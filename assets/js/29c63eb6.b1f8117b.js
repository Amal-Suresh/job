"use strict";(self.webpackChunkjob=self.webpackChunkjob||[]).push([[9636],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,a=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=l(r),m=s,d=p["".concat(u,".").concat(m)]||p[m]||f[m]||a;return r?n.createElement(d,o(o({ref:t},c),{},{components:r})):n.createElement(d,o({ref:t},c))}));function d(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=r.length,o=new Array(a);o[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[p]="string"==typeof e?e:s,o[1]=i;for(var l=2;l<a;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},586:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var n=r(7462),s=(r(7294),r(3905));const a={},o="What is the diff `useState` vs `useRef`?",i={unversionedId:"questions/reactjs/use-state-vs-use-ref",id:"questions/reactjs/use-state-vs-use-ref",title:"What is the diff `useState` vs `useRef`?",description:"1. useState causes components to re-render after state updates whereas useRef doesn\u2019t cause a component to re-render when the value or state changes. Essentially, useRef is like a \u201cbox\u201d that can hold a mutable value in its (.current) property.",source:"@site/interview/questions/reactjs/use-state-vs-use-ref.md",sourceDirName:"questions/reactjs",slug:"/questions/reactjs/use-state-vs-use-ref",permalink:"/questions/reactjs/use-state-vs-use-ref",draft:!1,editUrl:"https://github.com/izemil/job/edit/master/interview/questions/reactjs/use-state-vs-use-ref.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"What is the diff between `useMemo` vs `useCallback` hooks?",permalink:"/questions/reactjs/use-memo-vs-use-callback"},next:{title:"Why to use virtual DOM?",permalink:"/questions/reactjs/virtual-dom"}},u={},l=[],c={toc:l};function p(e){let{components:t,...r}=e;return(0,s.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"what-is-the-diff-usestate-vs-useref"},"What is the diff ",(0,s.kt)("inlineCode",{parentName:"h1"},"useState")," vs ",(0,s.kt)("inlineCode",{parentName:"h1"},"useRef"),"?"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("inlineCode",{parentName:"li"},"useState")," causes components to re-render after state updates whereas ",(0,s.kt)("inlineCode",{parentName:"li"},"useRef")," doesn\u2019t cause a component to re-render when the value or state changes. Essentially, ",(0,s.kt)("inlineCode",{parentName:"li"},"useRef")," is like a \u201cbox\u201d that can hold a mutable value in its (.current) property."),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("inlineCode",{parentName:"li"},"useState")," allows us to update the state inside components. While ",(0,s.kt)("inlineCode",{parentName:"li"},"useRef")," allows referencing DOM elements.")))}p.isMDXComponent=!0}}]);