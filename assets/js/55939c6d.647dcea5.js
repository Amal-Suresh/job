"use strict";(self.webpackChunkjob=self.webpackChunkjob||[]).push([[8453],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>f});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},m=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=p(r),d=i,f=u["".concat(l,".").concat(d)]||u[d]||c[d]||a;return r?n.createElement(f,s(s({ref:t},m),{},{components:r})):n.createElement(f,s({ref:t},m))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,s=new Array(a);s[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:i,s[1]=o;for(var p=2;p<a;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6216:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var n=r(7462),i=(r(7294),r(3905));const a={tags:["Hard","Array"]},s="First Missing Positive",o={unversionedId:"algorithms/hard/first-missing-positive",id:"algorithms/hard/first-missing-positive",title:"First Missing Positive",description:"Given an unsorted integer array, find the smallest missing\xa0positive integer.",source:"@site/interview/algorithms/hard/first-missing-positive.md",sourceDirName:"algorithms/hard",slug:"/algorithms/hard/first-missing-positive",permalink:"/algorithms/hard/first-missing-positive",draft:!1,editUrl:"https://github.com/izemil/job/edit/master/interview/algorithms/hard/first-missing-positive.md",tags:[{label:"Hard",permalink:"/tags/hard"},{label:"Array",permalink:"/tags/array"}],version:"current",frontMatter:{tags:["Hard","Array"]},sidebar:"tutorialSidebar",previous:{title:"Find Minimum in Rotated Sorted Array II",permalink:"/algorithms/hard/find-minimum-in-rotated-sorted-array-ii"},next:{title:"Insert Interval",permalink:"/algorithms/hard/insert-interval"}},l={},p=[],m={toc:p};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"first-missing-positive"},"First Missing Positive"),(0,i.kt)("p",null,"Given an unsorted integer array, find the smallest missing\xa0positive integer."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 1:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Input: [1,2,0]\nOutput: 3\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 2:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Input: [3,4,-1,1]\nOutput: 2\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 3:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Input: [7,8,9,11,12]\nOutput: 1\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note:")),(0,i.kt)("p",null,"Your algorithm should run in ",(0,i.kt)("strong",{parentName:"p"},"O"),"(",(0,i.kt)("strong",{parentName:"p"},"n"),") time and uses constant extra space."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Solution"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar firstMissingPositive = function (nums) {\n    var len = nums.length;\n    var tmp = 0;\n    var i = 0;\n    while (i < len) {\n        tmp = nums[i];\n        if (tmp > 0 && tmp !== i + 1 && tmp !== nums[tmp - 1]) swap(nums, i, tmp - 1);\n        else i++;\n    }\n    for (var j = 0; j < len; j++) {\n        if (nums[j] !== j + 1) return j + 1;\n    }\n    return len + 1;\n};\n\nvar swap = function (arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n};\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Complexity:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Time complexity : O(n)."),(0,i.kt)("li",{parentName:"ul"},"Space complexity : O(1)."))))}u.isMDXComponent=!0}}]);