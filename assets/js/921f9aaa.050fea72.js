"use strict";(self.webpackChunkjob=self.webpackChunkjob||[]).push([[192],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},l="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),l=c(n),d=o,m=l["".concat(s,".").concat(d)]||l[d]||f[d]||a;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u[l]="string"==typeof e?e:o,i[1]=u;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8707:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>u,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={},i="What is a pure function?",u={unversionedId:"questions/javascript/pure-function",id:"questions/javascript/pure-function",title:"What is a pure function?",description:"A\xa0pure function\xa0is a function which:",source:"@site/interview/questions/javascript/pure-function.md",sourceDirName:"questions/javascript",slug:"/questions/javascript/pure-function",permalink:"/questions/javascript/pure-function",draft:!1,editUrl:"https://github.com/izemil/job/edit/master/interview/questions/javascript/pure-function.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"What is the `Proxy` object used for?",permalink:"/questions/javascript/proxy-object"},next:{title:'Why is it better to leave the global scope "as is" and not touch it?',permalink:"/questions/javascript/pure-global-scope"}},s={},c=[],p={toc:c};function l(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"what-is-a-pure-function"},"What is a pure function?"),(0,o.kt)("p",null,"A\xa0",(0,o.kt)("strong",{parentName:"p"},"pure function"),"\xa0is a function which:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"The same input, always returns the same output"),(0,o.kt)("li",{parentName:"ol"},"Produces no side effects and they does not depend on any state or data outside of its scope and does not modify any state or data outside of its scope")),(0,o.kt)("p",null,"Code explanation of pure functions:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const double = (x) => x * 2; // pure function\n\nconst doubleWithSideEffect = (x) => {\n    console.log('start doubling:', x);\n    return x * 2;\n}; // impure function\n\nconst random = () => Math.random(); // impure because different outputs\n\nconst log = (x) => console.log(x); // impure, side effect + must have `return` statement\n")))}l.isMDXComponent=!0}}]);