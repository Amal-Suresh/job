"use strict";(self.webpackChunkjob=self.webpackChunkjob||[]).push([[1635],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>b});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,b=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(b,i(i({ref:t},l),{},{components:n})):r.createElement(b,i({ref:t},l))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1563:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={},i="What are `Map` and `Set` objects?",s={unversionedId:"questions/javascript/map-set-objects",id:"questions/javascript/map-set-objects",title:"What are `Map` and `Set` objects?",description:"Map is a collection of keyed values.",source:"@site/interview/questions/javascript/map-set-objects.md",sourceDirName:"questions/javascript",slug:"/questions/javascript/map-set-objects",permalink:"/questions/javascript/map-set-objects",draft:!1,editUrl:"https://github.com/izemil/job/edit/master/interview/questions/javascript/map-set-objects.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"What do Javascript types exist?",permalink:"/questions/javascript/javascript-types"},next:{title:"Explain Mutable and Immutable values",permalink:"/questions/javascript/mutable-vs-immutable-values"}},c={},p=[],l={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"what-are-map-and-set-objects"},"What are ",(0,a.kt)("inlineCode",{parentName:"h1"},"Map")," and ",(0,a.kt)("inlineCode",{parentName:"h1"},"Set")," objects?"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Map")," is a collection of keyed values.\n",(0,a.kt)("inlineCode",{parentName:"p"},"Set")," is a collection of unique values."),(0,a.kt)("p",null,"Iteration over\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"Map"),"\xa0and\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"Set"),"\xa0is always in the insertion order, so we can\u2019t say that these collections are unordered, but we can\u2019t reorder elements or directly get an element by its number."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const map = new Map([['key', 1], ['key2', 'value']]);\nconst set = new Set([1, 2, 2, 3]);\n")))}u.isMDXComponent=!0}}]);