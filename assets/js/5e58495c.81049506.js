"use strict";(self.webpackChunkjob=self.webpackChunkjob||[]).push([[5458],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var a=o.createContext({}),l=function(e){var t=o.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return o.createElement(a.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,f=u["".concat(a,".").concat(d)]||u[d]||m[d]||i;return n?o.createElement(f,s(s({ref:t},p),{},{components:n})):o.createElement(f,s({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=d;var c={};for(var a in t)hasOwnProperty.call(t,a)&&(c[a]=t[a]);c.originalType=e,c[u]="string"==typeof e?e:r,s[1]=c;for(var l=2;l<i;l++)s[l]=n[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2251:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var o=n(7462),r=(n(7294),n(3905));const i={},s="Open-Closed Principle",c={unversionedId:"questions/common/open-closed-principle",id:"questions/common/open-closed-principle",title:"Open-Closed Principle",description:"Program entities (classes, modules, functions) must be open for extension, but not for modification.",source:"@site/interview/questions/common/open-closed-principle.md",sourceDirName:"questions/common",slug:"/questions/common/open-closed-principle",permalink:"/questions/common/open-closed-principle",draft:!1,editUrl:"https://github.com/izemil/job/edit/master/interview/questions/common/open-closed-principle.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"What is OOP?",permalink:"/questions/common/oop"},next:{title:"What is Parallel execution?",permalink:"/questions/common/parallel-execution"}},a={},l=[],p={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"open-closed-principle"},"Open-Closed Principle"),(0,r.kt)("p",null,"Program entities (classes, modules, functions) must be open for extension, but not for modification."),(0,r.kt)("p",null,"Let's continue with ",(0,r.kt)("inlineCode",{parentName:"p"},"TodoList")," class, check code below and try to refactor it according open-closed principle:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"enum EStatus {\n    pending,\n    progress,\n    completed,\n}\n\ninterface ITodo {\n    status: EStatus;\n    // ...other todo fields\n}\n\nclass TodoList {\n    items: ITodo[];\n\n    processTodos(status: EStatus) {\n        for (const todo of this.items) {\n            if (todo.status === EStatus.pending) {\n                // ...logic1\n            }\n            if (todo.status === EStatus.progress) {\n                // ...logic2\n            }\n            if (todo.status === EStatus.completed) {\n                // ...logic3\n            }\n        }\n    }\n}\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Example Solution"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class TodoList {\n    processTodos(status, cb) {\n        for (const todo of this.items) {\n            if (todo.status === status) {\n                cb();\n            }\n        }\n    }\n}\n"))))}u.isMDXComponent=!0}}]);